name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
            java-version: '11'
            distribution: 'corretto'

      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## create application-aws.yml
      - name: make application-aws.yml
        run: |
          ## create application-aws.yml
          cd ./src/main/resources
          
          # application-aws.yml 파일 생성
          touch ./application-aws.yml
          
          # GitHub-Actions 에서 설정한 값을 application-aws.yml 파일에 쓰기
          echo "${{ secrets.DATABASE }}" >> ./application-aws.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        env:
          JWT_TOKEN: ${{ secrets.JWT_TOKEN }}

      ## 이미지 빌드 및 도커허브에 push
      - name: server docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f dockerfile-nginx -t ${{ secrets.DOCKER_REPO }}/jaetteoli-server .
          docker push ${{ secrets.DOCKER_REPO }}/jaetteoli-server

      ## docker compose up
      # HOST : 인스턴스 주소
      # KEY : ssh값 - 전부 복사, % 제외
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.KEY }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            
            sudo docker pull ${{ secrets.DOCKER_REPO }}/jaetteoli-server
            sudo docker pull ${{ secrets.DOCKER_REPO }}/jaetteoli-nginx
            
            sudo docker-compose up -d
            sudo docker image prune -f